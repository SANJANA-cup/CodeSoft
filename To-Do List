#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct Task {
    string description;
    bool isCompleted;
};

vector<Task> todoList;

void addTask() {
    Task newTask;
    cout << "Enter task description: ";
    cin.ignore();
    getline(cin, newTask.description);
    newTask.isCompleted = false;
    todoList.push_back(newTask);
    cout << "Task added successfully!\n";
}

void viewTasks() {
    if (todoList.empty()) {
        cout << "No tasks in the list.\n";
        return;
    }

    cout << "\nTo-Do List:\n";
    for (int i = 0; i < todoList.size(); ++i) {
        cout << i + 1 << ". [" << (todoList[i].isCompleted ? "âœ“" : " ") << "] "
             << todoList[i].description << "\n";
    }
}

void markTaskCompleted() {
    int index;
    cout << "Enter task number to mark as completed: ";
    cin >> index;

    if (index > 0 && index <= todoList.size()) {
        todoList[index - 1].isCompleted = true;
        cout << "Task marked as completed.\n";
    } else {
        cout << "Invalid task number!\n";
    }
}

void removeTask() {
    int index;
    cout << "Enter task number to remove: ";
    cin >> index;

    if (index > 0 && index <= todoList.size()) {
        todoList.erase(todoList.begin() + index - 1);
        cout << "Task removed successfully.\n";
    } else {
        cout << "Invalid task number!\n";
    }
}

int main() {
    int choice;

    while (true) {
        cout << "\n--- To-Do List Manager ---\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Choose an option: ";
        cin >> choice;

        switch (choice) {
            case 1: addTask(); break;
            case 2: viewTasks(); break;
            case 3: markTaskCompleted(); break;
            case 4: removeTask(); break;
            case 5: cout << "Exiting To-Do List Manager.\n"; return 0;
            default: cout << "Invalid option. Try again.\n";
        }
    }

    return 0;
}
